/*
 * This file is generated by jOOQ.
 */
package generated.sky.regular.income.tables.records;


import generated.sky.regular.income.tables.BankStatement;

import java.time.LocalDate;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankStatementRecord extends UpdatableRecordImpl<BankStatementRecord> implements Record3<UUID, LocalDate, Integer> {

    private static final long serialVersionUID = -614802499;

    /**
     * Setter for <code>REGULAR_INCOME.bank_statement.id</code>.
     */
    public BankStatementRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>REGULAR_INCOME.bank_statement.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>REGULAR_INCOME.bank_statement.date_record</code>.
     */
    public BankStatementRecord setDateRecord(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>REGULAR_INCOME.bank_statement.date_record</code>.
     */
    public LocalDate getDateRecord() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>REGULAR_INCOME.bank_statement.amount_balance_cents</code>.
     */
    public BankStatementRecord setAmountBalanceCents(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>REGULAR_INCOME.bank_statement.amount_balance_cents</code>.
     */
    public Integer getAmountBalanceCents() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UUID, LocalDate, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UUID, LocalDate, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return BankStatement.BANK_STATEMENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDate> field2() {
        return BankStatement.BANK_STATEMENT.DATE_RECORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return BankStatement.BANK_STATEMENT.AMOUNT_BALANCE_CENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate component2() {
        return getDateRecord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getAmountBalanceCents();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate value2() {
        return getDateRecord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getAmountBalanceCents();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankStatementRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankStatementRecord value2(LocalDate value) {
        setDateRecord(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankStatementRecord value3(Integer value) {
        setAmountBalanceCents(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BankStatementRecord values(UUID value1, LocalDate value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BankStatementRecord
     */
    public BankStatementRecord() {
        super(BankStatement.BANK_STATEMENT);
    }

    /**
     * Create a detached, initialised BankStatementRecord
     */
    public BankStatementRecord(UUID id, LocalDate dateRecord, Integer amountBalanceCents) {
        super(BankStatement.BANK_STATEMENT);

        set(0, id);
        set(1, dateRecord);
        set(2, amountBalanceCents);
    }
}
