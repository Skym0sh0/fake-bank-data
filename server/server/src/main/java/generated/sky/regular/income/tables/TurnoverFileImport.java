/*
 * This file is generated by jOOQ.
 */
package generated.sky.regular.income.tables;


import generated.sky.regular.income.Indexes;
import generated.sky.regular.income.Keys;
import generated.sky.regular.income.RegularIncome;
import generated.sky.regular.income.tables.records.TurnoverFileImportRecord;

import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TurnoverFileImport extends TableImpl<TurnoverFileImportRecord> {

    private static final long serialVersionUID = 236244683;

    /**
     * The reference instance of <code>REGULAR_INCOME.turnover_file_import</code>
     */
    public static final TurnoverFileImport TURNOVER_FILE_IMPORT = new TurnoverFileImport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TurnoverFileImportRecord> getRecordType() {
        return TurnoverFileImportRecord.class;
    }

    /**
     * The column <code>REGULAR_INCOME.turnover_file_import.id</code>.
     */
    public final TableField<TurnoverFileImportRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>REGULAR_INCOME.turnover_file_import.imported_at</code>.
     */
    public final TableField<TurnoverFileImportRecord, OffsetDateTime> IMPORTED_AT = createField("imported_at", org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE.nullable(false), this, "");

    /**
     * The column <code>REGULAR_INCOME.turnover_file_import.filename</code>.
     */
    public final TableField<TurnoverFileImportRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>REGULAR_INCOME.turnover_file_import.file_size</code>.
     */
    public final TableField<TurnoverFileImportRecord, Long> FILE_SIZE = createField("file_size", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>REGULAR_INCOME.turnover_file_import.file_content_type</code>.
     */
    public final TableField<TurnoverFileImportRecord, String> FILE_CONTENT_TYPE = createField("file_content_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>REGULAR_INCOME.turnover_file_import.file_content</code>.
     */
    public final TableField<TurnoverFileImportRecord, byte[]> FILE_CONTENT = createField("file_content", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

    /**
     * The column <code>REGULAR_INCOME.turnover_file_import.checksum</code>.
     */
    public final TableField<TurnoverFileImportRecord, String> CHECKSUM = createField("checksum", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>REGULAR_INCOME.turnover_file_import</code> table reference
     */
    public TurnoverFileImport() {
        this(DSL.name("turnover_file_import"), null);
    }

    /**
     * Create an aliased <code>REGULAR_INCOME.turnover_file_import</code> table reference
     */
    public TurnoverFileImport(String alias) {
        this(DSL.name(alias), TURNOVER_FILE_IMPORT);
    }

    /**
     * Create an aliased <code>REGULAR_INCOME.turnover_file_import</code> table reference
     */
    public TurnoverFileImport(Name alias) {
        this(alias, TURNOVER_FILE_IMPORT);
    }

    private TurnoverFileImport(Name alias, Table<TurnoverFileImportRecord> aliased) {
        this(alias, aliased, null);
    }

    private TurnoverFileImport(Name alias, Table<TurnoverFileImportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TurnoverFileImport(Table<O> child, ForeignKey<O, TurnoverFileImportRecord> key) {
        super(child, key, TURNOVER_FILE_IMPORT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return RegularIncome.REGULAR_INCOME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TURNOVER_FILE_IMPORT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TurnoverFileImportRecord> getPrimaryKey() {
        return Keys.TURNOVER_FILE_IMPORT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TurnoverFileImportRecord>> getKeys() {
        return Arrays.<UniqueKey<TurnoverFileImportRecord>>asList(Keys.TURNOVER_FILE_IMPORT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TurnoverFileImport as(String alias) {
        return new TurnoverFileImport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TurnoverFileImport as(Name alias) {
        return new TurnoverFileImport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TurnoverFileImport rename(String name) {
        return new TurnoverFileImport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TurnoverFileImport rename(Name name) {
        return new TurnoverFileImport(name, null);
    }
}
