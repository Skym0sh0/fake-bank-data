buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version "$springboot_version"
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.0'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

group 'de.sky.regular.income.server'
version '1.0-SNAPSHOT'

ext['jooq.version'] = "$jooq_version"
ext['flyway.version'] = "$flyway_version"

dependencies {
    implementation project(':database')
    implementation project(':api')

    implementation group: 'org.slf4j', name: 'slf4j-api', version: "$slf4j_version"
//    implementation group: 'ch.qos.logback', name: 'logback-core', version: "$logback_version"
//    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "$logback_version"

    implementation group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: "$springboot_version"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$springboot_version"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: "$springboot_version"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$springboot_version"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: "$springboot_version"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "$springboot_version"
    compileOnly group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$springboot_version"
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$springboot_version"

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "$springboot_version"

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    implementation group: 'com.google.guava', name: 'guava', version: '33.0.0-jre'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: "$junit_version"
//    testRuntime group: 'org.junit.vintage', name: 'junit-vintage-engine', version: "$junit_version"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "$mockito_version"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: "$assertj_version"

//    implementation group: 'org.apache.poi', name: 'poi', version: '5.2.5'
    implementation group: 'com.univocity', name: 'univocity-parsers', version: '2.9.1'
}

sourceSets {
    main {
        java {
            srcDir 'database/src/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}

mainClassName = 'de.sky.regular.income.Server'

jib {
    container {
        mainClass = mainClassName
        ports = ['8080']
        environment = [
                JVM_PARAMETERS: '',
                CMD_ARGS      : '',
        ]

        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
    from {
        // linux/arm/v7
        image = 'registry://eclipse-temurin:19-jre-jammy@sha256:167557501026d70f7486b631d26ae00f7551cc1daba1da67f86948ea5bd2aa41'
    }
    to {
        image = "${docker_registry}/regular-income-backend"
        tags = ['latest'/*, 'dev'*/]
    }
    allowInsecureRegistries = true
}

tasks.register('copyWebApp', Copy) {
    from "$rootDir/frontend/build"
    into layout.buildDirectory.dir("resources/main/static/.")
}

compileJava.dependsOn ':frontend:npmBuild'
processResources.dependsOn 'copyWebApp'
