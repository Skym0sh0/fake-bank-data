buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '2.1.8.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.google.cloud.tools.jib' version '1.6.1'
}

group 'de.sky.regular.income.server'
version '1.0-SNAPSHOT'

dependencies {
    compile project(':database')
    compile project(':api')

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.28'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: "$logback_version"
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "$logback_version"

    implementation group: 'org.springframework.boot', name: 'spring-boot-dependencies', version: "$springboot_version"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$springboot_version"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$springboot_version"
    compileOnly group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$springboot_version"
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$springboot_version"

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: "$junit_version"
//    testRuntime group: 'org.junit.vintage', name: 'junit-vintage-engine', version: "$junit_version"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "$mockito_version"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: "$assertj_version"

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "$springboot_version"

    compile group: 'org.apache.poi', name: 'poi', version: '4.1.0'
}

sourceSets {
    main {
        java {
            srcDir 'database/src/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}

mainClassName = 'de.sky.regular.income.Server'

jib {
    container {
        mainClass = mainClassName
        ports = ['8080']
        environment = [
                JVM_PARAMETERS: '',
                CMD_ARGS      : '',
        ]

        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
    from {
//        image = 'gcr.io/distroless/java:11'
        image = 'registry://arm32v7/adoptopenjdk:12-hotspot-bionic'
    }
    to {
        image = "${docker_registry}/regular-income-backend"
        tags = ['latest'/*, 'dev'*/]
    }
    allowInsecureRegistries = true
}
